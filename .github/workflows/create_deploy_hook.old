name: create new deploy hook
# on: create
on: workflow_dispatch

jobs:
  create_deploy_hook:
    runs-on: ubuntu-latest
    steps:
      - name: vars
        id: vars
        run: |
          export rawbranch=${{ github.ref_name }}
          echo $rawbranch
          export branchstep="${rawbranch//[-]/___}"
          echo $branchstep
          export branch="${branchstep^^}"
          echo $branch
          echo "::set-output name=final_branch::${branch}"
      - name: curl
        env:
          BRANCH: ${{steps.vars.outputs.final_branch}}
        run: |
          echo ${{steps.vars.outputs.final_branch}}
          echo "${{env.BRANCH}}"
          curl -X POST "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CLOUDFLARE_ACCOUNT_ID }}/pages/projects/contrast-theme/deploy_hooks" \
          -H "X-Auth-Email: ${{ secrets.EMAIL }}" \
          -H "X-Auth-Key: ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
          -d '{"branch": "${{github.ref_name}}", "name": "CF_${{ env.BRANCH }}_HOOK"}' \
          -o newhook.json
      - name: gh_login
        run: |
          gh auth login --with-token <<< ${{ secrets.SECRET_CREATION_TOKEN }}
      - name: set_variable
        id: set_var
        env:
          BRANCH: ${{ steps.vars.outputs.final_branch }}
        run: |
          sudo apt-get install jq
          cat ./newhook.json
          gh secret set --repo "datapolitical/contrast-theme" "CF_${{env.BRANCH}}_HOOK" --body "`jq ' .result.hook_id' newhook.json`"
          echo "::set-output name=outputhook::CF_${{env.BRANCH}}_HOOK"
          echo "::set-output name=hookid::`jq ' .result.hook_id' newhook.json`"
      - name: curl_hook
        env:
          HOOKID: ${{steps.set_var.outputs.hookid}}
        run: |
          echo ${{ env.HOOKID }}
          curl -X POST "https://api.cloudflare.com/client/v4/pages/webhooks/deploy_hooks/${{ env.HOOKID }}"
